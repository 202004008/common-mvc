<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.misterchangray.dao.mapper.ConstantMapper">
  <resultMap id="BaseResultMap" type="com.github.misterchangray.dao.entity.Constant">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="shortcut" jdbcType="VARCHAR" property="shortcut" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="has_child" jdbcType="INTEGER" property="hasChild" />
    <result column="enabled" jdbcType="INTEGER" property="enabled" />
    <result column="deleted" jdbcType="INTEGER" property="deleted" />
    <result column="extra" jdbcType="INTEGER" property="extra" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, shortcut, pid, level, has_child, enabled, deleted, extra
  </sql>
  <select id="selectByQuery" parameterType="com.github.misterchangray.dao.entity.ConstantQuery" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from constant
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from constant
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from constant
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByQuery" parameterType="com.github.misterchangray.dao.entity.ConstantQuery">
    delete from constant
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.github.misterchangray.dao.entity.Constant">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into constant (name, shortcut, pid, 
      level, has_child, enabled, 
      deleted, extra)
    values (#{name,jdbcType=VARCHAR}, #{shortcut,jdbcType=VARCHAR}, #{pid,jdbcType=INTEGER}, 
      #{level,jdbcType=INTEGER}, #{hasChild,jdbcType=INTEGER}, #{enabled,jdbcType=INTEGER}, 
      #{deleted,jdbcType=INTEGER}, #{extra,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.github.misterchangray.dao.entity.Constant">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into constant
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="shortcut != null">
        shortcut,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="hasChild != null">
        has_child,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="extra != null">
        extra,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="shortcut != null">
        #{shortcut,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="hasChild != null">
        #{hasChild,jdbcType=INTEGER},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=INTEGER},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=INTEGER},
      </if>
      <if test="extra != null">
        #{extra,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByQuery" parameterType="com.github.misterchangray.dao.entity.ConstantQuery" resultType="java.lang.Long">
    select count(*) from constant
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByQuerySelective" parameterType="map">
    update constant
    <set>
      <if test="record.id != null">
        
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.shortcut != null">
        shortcut = #{record.shortcut,jdbcType=VARCHAR},
      </if>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.hasChild != null">
        has_child = #{record.hasChild,jdbcType=INTEGER},
      </if>
      <if test="record.enabled != null">
        enabled = #{record.enabled,jdbcType=INTEGER},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=INTEGER},
      </if>
      <if test="record.extra != null">
        extra = #{record.extra,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByQuery" parameterType="map">
    update constant
    set 
      name = #{record.name,jdbcType=VARCHAR},
      shortcut = #{record.shortcut,jdbcType=VARCHAR},
      pid = #{record.pid,jdbcType=INTEGER},
      level = #{record.level,jdbcType=INTEGER},
      has_child = #{record.hasChild,jdbcType=INTEGER},
      enabled = #{record.enabled,jdbcType=INTEGER},
      deleted = #{record.deleted,jdbcType=INTEGER},
      extra = #{record.extra,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.github.misterchangray.dao.entity.Constant">
    update constant
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="shortcut != null">
        shortcut = #{shortcut,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="hasChild != null">
        has_child = #{hasChild,jdbcType=INTEGER},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=INTEGER},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
      <if test="extra != null">
        extra = #{extra,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.github.misterchangray.dao.entity.Constant">
    update constant
    set name = #{name,jdbcType=VARCHAR},
      shortcut = #{shortcut,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=INTEGER},
      level = #{level,jdbcType=INTEGER},
      has_child = #{hasChild,jdbcType=INTEGER},
      enabled = #{enabled,jdbcType=INTEGER},
      deleted = #{deleted,jdbcType=INTEGER},
      extra = #{extra,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into constant
    (name, shortcut, pid, level, has_child, enabled, deleted, extra)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.name,jdbcType=VARCHAR}, #{item.shortcut,jdbcType=VARCHAR}, #{item.pid,jdbcType=INTEGER}, 
        #{item.level,jdbcType=INTEGER}, #{item.hasChild,jdbcType=INTEGER}, #{item.enabled,jdbcType=INTEGER}, 
        #{item.deleted,jdbcType=INTEGER}, #{item.extra,jdbcType=INTEGER})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into constant (
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'name' == column.value">
          #{item.name,jdbcType=VARCHAR}
        </if>
        <if test="'shortcut' == column.value">
          #{item.shortcut,jdbcType=VARCHAR}
        </if>
        <if test="'pid' == column.value">
          #{item.pid,jdbcType=INTEGER}
        </if>
        <if test="'level' == column.value">
          #{item.level,jdbcType=INTEGER}
        </if>
        <if test="'has_child' == column.value">
          #{item.hasChild,jdbcType=INTEGER}
        </if>
        <if test="'enabled' == column.value">
          #{item.enabled,jdbcType=INTEGER}
        </if>
        <if test="'deleted' == column.value">
          #{item.deleted,jdbcType=INTEGER}
        </if>
        <if test="'extra' == column.value">
          #{item.extra,jdbcType=INTEGER}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>